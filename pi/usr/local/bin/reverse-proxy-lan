#!/bin/bash

CONTAINER="nginx-reverse-proxy"

hostnames="$1"
if [ -z "$hostnames" ]; then
  echo "No target hostnames given (comma-delimited)."
  exit 1
fi

link="$2"
if [ -z "$link" ]; then
  echo "No link/device provided, assuming eth0"
  link="eth0"
fi

link_broadcast=$(ifconfig | grep "$link" -A1 | grep broadcast | awk '{print $NF}')
link_block="$(echo $link_broadcast | sed -e 's/\.[0-9]*$/.0/g')/24"

echo "Looking for hostnames on block $link_block"
workingdir="/tmp/$(date | sha256sum | awk '{print $1}')"
mkdir -p $workingdir
nmap_file="$workingdir/nmap.txt"
nmap -sn -oG - "$link_block" > $nmap_file
echo "---- NMap Results"
cat $nmap_file

ips=()
for hostname in $(echo ${hostnames//:/ }); do
  # can't memo-ize arp output, entire string turns into a single line
  ip="$(cat $nmap_file | grep "$hostname" | awk '{print $2}' | sed 's/^(\(.*\))$/\1/')"

  if [ -z "$ip" ]; then
    echo "WARNING: could not find IP for $hostname, skipping..."
    continue
  else
    echo "Found IP $ip for host $hostname"
  fi

  ips[${#ips[@]}]="$ip"
done

echo "Reverse-Searched IPs:"
echo "${ips[*]}"
rm -rf $workingdir

# ansible here for writing to /etc/nginx/nginx.conf based on ./etc/nginx/nginx.conf.j2

docker rm -f $CONTAINER || echo "No container named '$CONTAINER' to remove."
while docker ps -a | grep nginx > /dev/null; do echo "Waiting for $CONTAINER to die..." && sleep 1; done

echo "Starting $CONTAINER..."
docker run --rm -d \
  --name $CONTAINER \
  --log-driver json-file --log-opt max-size=8m --log-opt max-file=3 \
  -v /etc/nginx/nginx.conf:/etc/nginx/nginx.conf \
  --net=host nginx:1.21.1-alpine
until docker ps -a | grep nginx > /dev/null; do echo "Waiting for $CONTAINER to exist..." && sleep 1; done

echo "$CONTAINER started! 'docker logs -f $CONTAINER' to view logs."
docker logs -f $CONTAINER > /dev/null

sighdl ()
{
  echo "Killing container"
  docker rm -f $CONTAINER
}
trap sighdl SIGKILL SIGINT SIGTERM
